@using Microsoft.Extensions.Options
@using PropagatingKindness.Configuration
@model PropagatingKindness.Models.Advert.AllAvailablePromissedAdvertsViewModel

<div class="container mt-5">
    <h1 class="text-center">My Adverts</h1>
    <div class="row mt-4">
        @if (Model.Adverts.Any())
        {
            @foreach (var advert in Model.Adverts)
            {
                <!-- Advert Card -->
                <div class="col-md-3 mb-4">
                    <div class="cardAdvert">
                        <div class="advert-card-image-container position-relative ratio ratio-1x1">
                            <a asp-action="View" asp-controller="Advert" asp-route-id="@advert.Id">
                                <img src="@advert.Photo" class="img-fluid" alt="Advert Photo" id="imgAdvert">
                            </a>

                            @if (advert.Status == 2)
                            {
                                <div class="advert-card-ribbon bg-purple bg-gradient">
                                    <span>Promissed</span>
                                </div>
                            }
                        </div>
                        <div class="card-body-advert text-center">
                            <h5 class="card-title-advert">@advert.Name</h5>
                            <p>Postcode: @advert.PostCode</p>
                        </div>
                    </div>
                </div>
            }
        }
        else{
            <div class="card-body-advert text-center">
                <h2 style="color:crimson">Sorry, there are no available or promissed items.</h2>
            </div>
        }
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled":"")">
                    <a class="page-link" href="?page=@(Model.CurrentPage - 1)">Previous</a>
                </li>
                @{
                    int count = Model.TotalAdverts / 16;
                    if (Model.TotalAdverts % 16 == 0)
                    {
                        count--;
                    }
                    for (int i = 0; i <= count; i++)
                    {
                        <li class="page-item">
                            <a class="page-link @(Model.CurrentPage - 1 == i ? "active":"")" href="?page=@(i + 1)">@(i + 1)</a>
                        </li>
                    }
                }
                <li class="page-item @(Model.CurrentPage - 1 == count ? "disabled":"")">
                    <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
</div>
